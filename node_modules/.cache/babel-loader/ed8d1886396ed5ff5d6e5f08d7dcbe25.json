{"ast":null,"code":"var _jsxFileName = \"/home/sudhir/assignment-master/my-store/src/componets/pages/stageOne.js\";\nimport React from 'react';\nimport { Button, Container, Row, Col, Form, DropdownButton, Dropdown } from 'react-bootstrap';\n\nclass StageOne extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      let _this$props = this.props,\n          selectedValue = _this$props.selectedValue,\n          addedBy = _this$props.addedBy;\n      let newobj = {\n        selectedValue: selectedValue,\n        addedBy: addedBy,\n        dateAdded: this.dateInput.current.value\n      };\n      this.props.handlestageOne(newobj);\n    };\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          dropDownData = _this$props2.dropDownData,\n          selectedValue = _this$props2.selectedValue,\n          addedBy = _this$props2.addedBy,\n          handeInputChange = _this$props2.handeInputChange,\n          handleSelect = _this$props2.handleSelect; // const {selectedValue,addedBy} =this.state;\n\n    console.log('this.props', this.props);\n    let selected;\n    let defaultselectedFruit = dropDownData[0];\n\n    if (selectedValue) {\n      selected = selectedValue;\n    } else {\n      selected = defaultselectedFruit;\n    }\n\n    return React.createElement(Row, {\n      className: \"spacing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, selected), React.createElement(Dropdown.Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, dropDownData && dropDownData.map(item => {\n      return React.createElement(Dropdown.Item, {\n        key: item,\n        active: selected === item,\n        onClick: () => handleSelect(item),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, item);\n    })))), React.createElement(Col, {\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalselectedFruit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 4,\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Selected Fruit\"), React.createElement(Col, {\n      sm: 8,\n      md: 8,\n      className: \"custom-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"selected Fruit shown here\",\n      disabled: true,\n      value: selected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontaladdedby\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 4,\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Added By\"), React.createElement(Col, {\n      sm: 8,\n      md: 8,\n      className: \"custom-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"addedBy\",\n      placeholder: \"here you enter name\",\n      value: addedBy,\n      autoComplete: \"off\",\n      onChange: event => handeInputChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 4,\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Date Added\"), React.createElement(Col, {\n      sm: 8,\n      md: 8,\n      className: \"custom-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"date\",\n      onChange: event => handeInputChange(event),\n      name: \"addedDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: {\n        span: 3,\n        offset: 9\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"submit\"))))));\n  }\n\n}\n\nexport default StageOne;","map":{"version":3,"sources":["/home/sudhir/assignment-master/my-store/src/componets/pages/stageOne.js"],"names":["React","Button","Container","Row","Col","Form","DropdownButton","Dropdown","StageOne","Component","handleSubmit","event","preventDefault","props","selectedValue","addedBy","newobj","dateAdded","dateInput","current","value","handlestageOne","render","dropDownData","handeInputChange","handleSelect","console","log","selected","defaultselectedFruit","map","item","span","offset"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Container, Row, Col, Form ,DropdownButton,Dropdown} from 'react-bootstrap';\n\nclass StageOne extends React.Component {\n    handleSubmit =(event)=>{\n        event.preventDefault();\n        let {selectedValue,addedBy}=this.props;\n        let newobj ={\n            selectedValue:selectedValue,\n            addedBy:addedBy,\n            dateAdded:this.dateInput.current.value\n        }\n        this.props.handlestageOne(newobj);\n    }\n    render() {\n        const {dropDownData,selectedValue,addedBy,handeInputChange,handleSelect}=this.props;\n        // const {selectedValue,addedBy} =this.state;\n\n        console.log('this.props',this.props);\n        let selected;\n        let defaultselectedFruit = dropDownData[0];\n        if(selectedValue){\n            selected=selectedValue\n        }else {\n            selected =defaultselectedFruit\n        }\n\n        return (\n                <Row className=\"spacing\">\n                    <Col md={4}>\n                    <Dropdown>\n                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                       {selected}\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu >\n                    {dropDownData  && dropDownData.map(item =>{\n                                return (<Dropdown.Item \n                                    key={item}\n                                    active={selected === item }\n                                    onClick={() => handleSelect(item)}\n                                    >{item}</Dropdown.Item>)\n                            })}\n                    </Dropdown.Menu>\n                    </Dropdown>\n                    </Col>\n                    <Col md={8}>\n                        <Form onSubmit={this.handleSubmit}>\n                            <Form.Group as={Row} controlId=\"formHorizontalselectedFruit\">\n                                <Form.Label column sm={4} md={3} >\n                                    Selected Fruit\n                                    </Form.Label>\n                                <Col sm={8} md={8} className=\"custom-input\">\n                                    <Form.Control type=\"text\" placeholder=\"selected Fruit shown here\" disabled value={selected} />\n                                </Col>\n                            </Form.Group>\n\n                            <Form.Group as={Row} controlId=\"formHorizontaladdedby\">\n                                <Form.Label column sm={4} md={3}>\n                                    Added By\n                                 </Form.Label>\n                                <Col sm={8} md={8} className=\"custom-input\">\n                                    <Form.Control \n                                    type=\"text\" \n                                    name=\"addedBy\"\n                                    placeholder=\"here you enter name\" \n                                    value={addedBy}  \n                                    autoComplete=\"off\" \n                                    onChange={(event) => handeInputChange(event)}/>\n                                </Col>\n                            </Form.Group>\n                            <Form.Group as={Row} controlId=\"formHorizontalPassword\">\n                                <Form.Label column sm={4} md={3} >\n                                    Date Added\n                                 </Form.Label>\n                                <Col sm={8} md={8} className=\"custom-input\">\n                                    <Form.Control type=\"date\" onChange={(event) => handeInputChange(event)} name=\"addedDate\"/>\n                                </Col>\n                            </Form.Group>\n                            <Form.Group as={Row}>\n                                <Col sm={{ span: 3, offset: 9 }}>\n                                    <Button type=\"submit\">submit</Button>\n                                </Col>\n                            </Form.Group>\n                        </Form>\n                    </Col>\n                </Row>\n        )\n    }\n}\nexport default StageOne;"]},"metadata":{},"sourceType":"module"}