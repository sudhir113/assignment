{"ast":null,"code":"var _jsxFileName = \"/home/sudhir/assignment-master/my-store/src/componets/pages/stageOne.js\";\nimport React from 'react';\nimport { Button, Container, Row, Col, Form, DropdownButton, Dropdown } from 'react-bootstrap';\n\nclass StageOne extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      debugger;\n      console.log('dateInput', this.dateInput.current.value);\n      let _this$props = this.props,\n          selectedValue = _this$props.selectedValue,\n          addedBy = _this$props.addedBy;\n      console.log('props', this.props);\n      let newobj = {\n        selectedValue: selectedValue,\n        addedBy: addedBy,\n        dateAdded: this.dateInput.current.value\n      };\n      this.props.handlestageOne(newobj);\n    };\n\n    this.handleDate = event => {\n      console.log('date is called', event.target.value);\n    };\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          dropDownData = _this$props2.dropDownData,\n          selectedValue = _this$props2.selectedValue,\n          addedBy = _this$props2.addedBy,\n          handeInputChange = _this$props2.handeInputChange,\n          handleSelect = _this$props2.handleSelect; // const {selectedValue,addedBy} =this.state;\n\n    console.log('this.props', this.props);\n    let selected;\n    let defaultselectedFruit = dropDownData[0];\n\n    if (selectedValue) {\n      selected = selectedValue;\n    } else {\n      selected = defaultselectedFruit;\n    }\n\n    return React.createElement(Row, {\n      className: \"spacing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, selected), React.createElement(Dropdown.Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, dropDownData && dropDownData.map(item => {\n      return React.createElement(Dropdown.Item, {\n        key: item,\n        active: selected === item,\n        onClick: () => handleSelect(item),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, item);\n    })))), React.createElement(Col, {\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalselectedFruit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 4,\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Selected Fruit\"), React.createElement(Col, {\n      sm: 8,\n      md: 8,\n      className: \"custom-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"selected Fruit shown here\",\n      disabled: true,\n      value: selected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontaladdedby\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 4,\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Added By\"), React.createElement(Col, {\n      sm: 8,\n      md: 8,\n      className: \"custom-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"here you enter name\",\n      value: addedBy,\n      autoComplete: \"off\",\n      onChange: event => handeInputChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 4,\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Date Added\"), React.createElement(Col, {\n      sm: 8,\n      md: 8,\n      className: \"custom-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"date\",\n      onChange: this.handleDate,\n      name: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: {\n        span: 3,\n        offset: 9\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"submit\"))))));\n  }\n\n}\n\nexport default StageOne;","map":{"version":3,"sources":["/home/sudhir/assignment-master/my-store/src/componets/pages/stageOne.js"],"names":["React","Button","Container","Row","Col","Form","DropdownButton","Dropdown","StageOne","Component","handleSubmit","event","preventDefault","console","log","dateInput","current","value","props","selectedValue","addedBy","newobj","dateAdded","handlestageOne","handleDate","target","render","dropDownData","handeInputChange","handleSelect","selected","defaultselectedFruit","map","item","span","offset"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Container, Row, Col, Form ,DropdownButton,Dropdown} from 'react-bootstrap';\n\nclass StageOne extends React.Component {\n    handleSubmit =(event)=>{\n        event.preventDefault();\n        debugger;\n        console.log('dateInput',this.dateInput.current.value);\n        let {selectedValue,addedBy}=this.props;\n        console.log('props',this.props);\n        let newobj ={\n            selectedValue:selectedValue,\n            addedBy:addedBy,\n            dateAdded:this.dateInput.current.value\n        }\n        this.props.handlestageOne(newobj);\n    }\n    handleDate = (event)=>{\n        console.log('date is called',event.target.value);\n    }\n    render() {\n        const {dropDownData,selectedValue,addedBy,handeInputChange,handleSelect}=this.props;\n        // const {selectedValue,addedBy} =this.state;\n\n        console.log('this.props',this.props);\n        let selected;\n        let defaultselectedFruit = dropDownData[0];\n        if(selectedValue){\n            selected=selectedValue\n        }else {\n            selected =defaultselectedFruit\n        }\n\n        return (\n                <Row className=\"spacing\">\n                    <Col md={4}>\n                    <Dropdown>\n                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                       {selected}\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu >\n                    {dropDownData  && dropDownData.map(item =>{\n                                return (<Dropdown.Item \n                                    key={item}\n                                    active={selected === item }\n                                    onClick={() => handleSelect(item)}\n                                    >{item}</Dropdown.Item>)\n                            })}\n                    </Dropdown.Menu>\n                    </Dropdown>\n                    </Col>\n                    <Col md={8}>\n                        <Form onSubmit={this.handleSubmit}>\n                            <Form.Group as={Row} controlId=\"formHorizontalselectedFruit\">\n                                <Form.Label column sm={4} md={3} >\n                                    Selected Fruit\n                                    </Form.Label>\n                                <Col sm={8} md={8} className=\"custom-input\">\n                                    <Form.Control type=\"text\" placeholder=\"selected Fruit shown here\" disabled value={selected} />\n                                </Col>\n                            </Form.Group>\n\n                            <Form.Group as={Row} controlId=\"formHorizontaladdedby\">\n                                <Form.Label column sm={4} md={3}>\n                                    Added By\n                                 </Form.Label>\n                                <Col sm={8} md={8} className=\"custom-input\">\n                                    <Form.Control type=\"text\" placeholder=\"here you enter name\" value={addedBy}  autoComplete=\"off\" onChange={(event) => handeInputChange(event) }/>\n                                </Col>\n                            </Form.Group>\n                            <Form.Group as={Row} controlId=\"formHorizontalPassword\">\n                                <Form.Label column sm={4} md={3} >\n                                    Date Added\n                                 </Form.Label>\n                                <Col sm={8} md={8} className=\"custom-input\">\n                                    <Form.Control type=\"date\" onChange={this.handleDate} name=\"date\"/>\n                                </Col>\n                            </Form.Group>\n                            <Form.Group as={Row}>\n                                <Col sm={{ span: 3, offset: 9 }}>\n                                    <Button type=\"submit\">submit</Button>\n                                </Col>\n                            </Form.Group>\n                        </Form>\n                    </Col>\n                </Row>\n        )\n    }\n}\nexport default StageOne;"]},"metadata":{},"sourceType":"module"}